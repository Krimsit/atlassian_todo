import React, { createContext, useEffect, useState, useContext } from "react"import { useSelector } from "react-redux"const Context = createContext()export const ToDoProvider = ({ children }) => {  const todo = useSelector(state => state.todo)  const [onlyChecked, setOnlyChecked] = useState(false)  const [filteredIssues, setFilteredIssues] = useState(todo.issues || [])  const handleToggleOnlyChecked = () => setOnlyChecked(!onlyChecked)  useEffect(() => {    setFilteredIssues(todo.issues.filter(item => onlyChecked ? !!item.checked : true))  }, [onlyChecked, todo.issues])  return <Context.Provider value={{ onlyChecked: onlyChecked, toggleOnlyChecked: handleToggleOnlyChecked, issues: filteredIssues, queryStatus: todo.queryStatus }}>    {children}  </Context.Provider>}export const useToDo = () => {  const context = useContext(Context)  if (context === undefined) {    throw new Error(        'useToDo must be used within a ToDoProvider',    )  }  return context}